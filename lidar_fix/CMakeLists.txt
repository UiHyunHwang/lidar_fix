cmake_minimum_required(VERSION 3.5)
project(lidar_fix)

# Default to C99
if(NOT CMAKE_C_STANDARD)
  set(CMAKE_C_STANDARD 99)
endif()

# Default to C++14
if(NOT CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 14)
endif()

if(CMAKE_CXX_COMPILER_ID STREQUAL "GNU" OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
cmake_policy(SET CMP0074 NEW)
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(sensor_msgs REQUIRED)
find_package(OpenCV REQUIRED) 

set(dependencies
    rclcpp
    sensor_msgs
    ${OpenCV_INCLUDE_DIRS}  
)

include_directories(
  include
)

add_executable(lidar_fix_node src/lidar_fix_node.cpp src/lidar_fix_main.cpp)
ament_target_dependencies(lidar_fix_node ${dependencies})
target_link_libraries(lidar_fix_node ${OpenCV_LIBS}) 

target_include_directories(lidar_fix_node PUBLIC
  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/../>
  $<INSTALL_INTERFACE:include>
)

install(TARGETS
  lidar_fix_node
  DESTINATION lib/${PROJECT_NAME}
)

install(DIRECTORY
  launch
  DESTINATION share/${PROJECT_NAME}
)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()
